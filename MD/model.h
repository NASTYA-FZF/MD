#pragma once
#include<math.h>
#include <vector>

//переименовала такой тип для координат, скоростей, чтобы автоматизировать формулы для x y отдельно не вбивать потом
typedef std::vector<double> vec2D;

//масса атома аргона (из а.е.м. перевеодим в кг) не будет ли храниться ноль?
static double m = 39.948 / (6.02 * 10e26);
//равновесное расстояние между центрами атомов (по факту диаметр атома, если правильно поняла)
static double r0 = 0.382 * 10e-9;
//глубина потенциальной ямы на графике
static double D = 0.0103 * 1.6 * 10e-19;
//величина b в кристаллической решетке (рис. 1, стр. 23 методички)
static double b = sqrt(3) * r0 / 2;
//это один размер по Lx Ly так как Lx это 20 а, Ly это 20 b
static int L = 20;

//структура, хранящая информацию об атомах
struct atom
{
	vec2D coord;
	vec2D speed;

	//задание координат атома (удобно использовать позже)
	atom(double x, double y);
};

//класс, который будет обрабатывать движения атомов
class crystall
{
	//решетка атомов
	std::vector<atom> setka;

public:
	//конструктор, в котором задаются координаты атомов
	crystall();

	//возвращает набор координат всех атомов (для рисовальщика)
	std::vector<std::vector<double>> GetPos();
};